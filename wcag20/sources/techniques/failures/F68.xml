<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE technique
  SYSTEM "../../xmlspec.dtd">
<technique id="F68">
   <short-name>Failure of Success Criterion 4.1.2 due to a user interface control not having a programmatically determined name
   </short-name>
   <applicability>
      <p>HTML controls</p>
   </applicability>
   <applies-to>
 <!--     <success-criterion idref="content-structure-separation-programmatic"
                         relationship="failure"/> -->
      <success-criterion idref="ensure-compat-rsv" relationship="failure"/>
   </applies-to>
   <description>
      <p>This failure describes a problem that occurs when a form control does not have a name exposed to assistive technologies. The result is that some users will not be able to identify the purpose of the form control. The name can be provided in multiple ways, including the <el>label</el> element. Other options include use of the <att>title</att> attribute and <att>aria-label</att> which are used to directly provide text that is used for the accessibility name or <att>aria-labelledby</att> which indicates an association with other text on a page that is providing the name. Button controls can have a name assigned in other ways, as indicated below, but in certain situations may require use of <att>label</att>, <att>title</att>, <att>aria-label</att>, or <att>aria-labelledby</att>.</p>
      <note>
         <p>Elements that can use an explicitly-associated <el>label</el> element are:</p>
         <ulist>
            <item>
               <p>
                  <el>input</el>
               </p>
            </item>
            <item>
               <p>
                  <el>textarea</el>
               </p>
            </item>
            <item>
               <p>
                  <el>select</el>
               </p>
            </item>
         </ulist>
         <p>The <el>label</el> element is not used for the following because labels for these elements are provided via the <att>value</att> attribute (for Submit and Reset buttons), the <att>alt</att> attribute (for image buttons), or element content itself (<el>button</el>):</p>
         <ulist>
            <item>
               <p>Submit and Reset buttons (<code><![CDATA[input type="submit"]]></code> or <code><![CDATA[input type="reset"]]></code>)</p>
            </item>
            <item>
               <p>Image buttons (<code><![CDATA[input type="image"]]></code>)</p>
            </item>
            <item>
               <p>Hidden input fields (<code><![CDATA[input type="hidden"]]></code>)</p>
            </item>
            <item>
               <p>Buttons (<code><![CDATA[button]]></code> elements or <code><![CDATA[<input type="button">]]></code>)</p>
            </item>
         </ulist>
      </note>
   </description>
   <examples>
      <eg-group role="failure">
         <head/>
         <description>
            <p>The following example demonstrates a form that visually presents labels for form controls, but does not use the <el>label</el> element to associate them with their controls. The code example below is a failure because assistive technology may not be able to determine which label goes with which control.</p>
            <codeblock role="html5" xml:space="preserve"><![CDATA[
<form>
 First name: 
 <input type="text" name="firstname">
 <br>
 Last name: 
 <input type="text" name="lastname">
 <br>
 I have a dog <input type="checkbox" name="pet" value="dog">
 I have a cat <input type="checkbox" name="pet" value="cat">
</form>
]]></codeblock>
         </description>
      </eg-group>
      <eg-group role="failure">
         <head/>
         <description>
            <p>In the following code <phrase>example</phrase>, <el>label</el> elements are present, but they are not programmatically linked to the corresponding input controls and may therefore not be properly determined by assistive technology.</p>
            <codeblock role="html5" xml:space="preserve"><![CDATA[
<form action="..." method="post"> 
<p> 
<label>First Name</label>
<input type="text" name="firstname"> 
<label>Last Name</label> 
<input type="text" name="lastname"> 
</p> 
</form>
]]></codeblock>
         </description>
      </eg-group>
      <eg-group role="failure">
         <head/>
         <description>
            <p>The search text box in the following code example does not have a programmatically determinable name. The name can be supplied with any of the approaches mentioned above.</p>
            <codeblock role="html5" xml:space="preserve"><![CDATA[
<input type="text" value="Type your search here"><input type="submit" type="submit" value="Search">
]]></codeblock>
         </description>
      </eg-group>
   </examples>
   <resources>
      <see-also>
         <ulist>
            <item>
               <p>
                  <loc xmlns:xlink="http://www.w3.org/1999/xlink"
                       href="http://www.w3.org/TR/wai-aria/roles#namecalculation">WAI-ARIA Accessible Name Calulation</loc>
               </p>
            </item>
         </ulist>
      </see-also>
   </resources>
   <related-techniques>
      <relatedtech idref="H44"/>
      <relatedtech idref="H65"/>
      <relatedtech idref="G167"/>
      <relatedtech idref="ARIA6"/>
      <!-- Using aria-label -->
      <relatedtech idref="ARIA9"/>
      <!-- Using aria-labelledbyby to concatenate a label from several text nodes -->
      <relatedtech idref="ARIA16"/>
      <!-- Using aria-labelledby to name controls -->
      <relatedtech idref="ARIA14"/>
      <!-- Using aria-labelledby to provide an invisible label where a visible one cannot be used -->
   </related-techniques>
   <tests>
      <procedure>
         <p>For all <el>input</el>, <el>textarea</el> and <el>select</el> elements in the Web page (except inputs of type <attval>hidden</attval>, <attval>submit</attval>, <attval>reset</attval>, or <attval>button</attval>:</p>
         <olist>
            <item>
               <p>Check that each element has a programmatically determined name using one of the following ways:</p>
               <olist>
				  <item><p>the text label or labels are programmatically associated with the control element via the <att>aria-labelledby</att> attribute (each id given as a value in the <att>aria-labelledby</att> attribute matches the <att>id</att> of the text label element).</p></item>
				  <item><p>the control is programmatically determined through the value of its <att>aria-label</att> attribute.</p></item>
                  <item>
                     <p>the text label is contained in a <el>label</el> element that is correctly associated to the respective <el>input</el> element via the label's <att>for</att> attribute (the <att>id</att> given as value in the <att>for</att> attribute matches the <att>id</att> of the input element).</p>
                  </item>
                  <item>
                     <p>the control is contained within a <el>label</el> element that also contains the label text.</p>
                  </item>
				  <item><p>the control is an <el>input</el> of <att>type</att> <attval>image</attval> and the <att>alt</att> attribute provides a text label.</p></item>
                  <item>
                     <p>the control is programmatically determined through the value of <att>title</att> attribute.</p>
                  </item>
               </olist>
            </item>
         </olist>
      </procedure>
      <expected-results>
         <ulist>
            <item>
               <p>If all options of check #1 are false, then this failure condition applies and the content fails the Success Criterion.</p>
            </item>
         </ulist>
      </expected-results>
   </tests>
</technique>
